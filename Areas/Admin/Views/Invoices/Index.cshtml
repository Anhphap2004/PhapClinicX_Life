@model IEnumerable<PhapClinicX.Models.Invoice>
@{
    ViewData["Title"] = "Danh sách hóa đơn";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    int p = 1;
}

<style>
    /* Thiết kế trang danh sách hóa đơn */
    .invoice-list-page {
        padding: 20px 0;
        background-color: #f8f9fc;
    }

    .page-header {
        margin-bottom: 25px;
        position: relative;
    }

    .page-title {
        font-weight: 700;
        color: #2c3e50;
        position: relative;
        display: inline-block;
        margin-bottom: 0;
    }

        .page-title:after {
            content: "";
            position: absolute;
            left: 0;
            bottom: -10px;
            height: 4px;
            width: 50px;
            background-color: #4e73df;
            border-radius: 2px;
        }

    /* Filter section */
    .filter-section {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        padding: 15px;
        margin-bottom: 20px;
        border-left: 4px solid #4e73df;
    }

    .filter-title {
        font-size: 1rem;
        font-weight: 600;
        color: #4e73df;
        margin-bottom: 15px;
    }

    /* Table styling */
    .invoice-card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.07);
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .invoice-table {
        margin-bottom: 0;
    }

        .invoice-table thead th {
            background-color: #4e73df;
            color: #fff;
            font-weight: 600;
            border: none;
            padding: 15px;
            vertical-align: middle;
            white-space: nowrap;
        }

        .invoice-table tbody tr {
            transition: all 0.2s ease;
        }

            .invoice-table tbody tr:hover {
                background-color: #f1f3ff;
            }

        .invoice-table td {
            padding: 15px;
            vertical-align: middle;
            border-color: #f0f0f0;
        }

    /* Status badges */
    .status-badge {
        padding: 8px 12px;
        border-radius: 30px;
        font-weight: 500;
        font-size: 0.8rem;
        display: inline-block;
        min-width: 100px;
        text-align: center;
    }

    .status-pending {
        background-color: #fff8e1;
        color: #f6c23e;
        border: 1px solid #f6c23e;
    }

    .status-processed {
        background-color: #e5f7ed;
        color: #1cc88a;
        border: 1px solid #1cc88a;
    }

    .status-cancelled {
        background-color: #feebeb;
        color: #e74a3b;
        border: 1px solid #e74a3b;
    }

    /* Action buttons */
    .invoice-actions .btn {
        padding: 8px 12px;
        font-size: 0.85rem;
        margin: 0 2px;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

    .btn-edit {
        background-color: #fff6e0;
        color: #f6c23e;
        border: 1px solid #f6c23e;
    }

        .btn-edit:hover {
            background-color: #f6c23e;
            color: white;
        }

    .btn-view {
        background-color: #e7f1ff;
        color: #4e73df;
        border: 1px solid #4e73df;
    }

        .btn-view:hover {
            background-color: #4e73df;
            color: white;
        }

    .btn-delete {
        background-color: #feebeb;
        color: #e74a3b;
        border: 1px solid #e74a3b;
    }

        .btn-delete:hover {
            background-color: #e74a3b;
            color: white;
        }

    /* Dropdown control */
    .select-filter {
        border-radius: 6px;
        border: 1px solid #e1e5eb;
        padding: 10px 15px;
        font-size: 0.95rem;
        box-shadow: none;
        background-image: linear-gradient(to bottom, #ffffff 0%, #f8f9fa 100%);
    }

        .select-filter:focus {
            border-color: #4e73df;
            box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
        }

    /* No results message */
    .no-results {
        padding: 30px;
        text-align: center;
        color: #6c757d;
        border: 1px dashed #dee2e6;
        border-radius: 10px;
        margin: 20px 0;
    }

        .no-results i {
            font-size: 2rem;
            display: block;
            margin-bottom: 15px;
            color: #4e73df;
        }

    /* Create button */
    .btn-create {
        padding: 10px 20px;
        border-radius: 6px;
        font-weight: 600;
        transition: all 0.2s ease;
        background-color: #36b9cc;
        border-color: #36b9cc;
    }

        .btn-create:hover {
            background-color: #2c9faf;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(54, 185, 204, 0.3);
        }

    /* Reset button */
    .btn-reset {
        padding: 10px 15px;
        border-radius: 6px;
        transition: all 0.2s ease;
        background-color: #f8f9fa;
        border-color: #dae0e5;
        color: #6c757d;
    }

        .btn-reset:hover {
            background-color: #e2e6ea;
            color: #495057;
        }

    /* Animation */
    .filter-fade {
        animation: filterFade 0.4s ease-in-out;
    }

    @@keyframes filterFade {
        0% {
            opacity: 0.4;
        }

        100% {
            opacity: 1;
        }
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .invoice-actions {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

            .invoice-actions .btn {
                margin: 2px 0;
            }
    }
</style>

<div class="container-fluid invoice-list-page">
    <div class="page-header d-flex justify-content-between align-items-center mb-4">
        <h2 class="page-title">Danh sách hóa đơn</h2>
        <a asp-action="Create" class="btn btn-create">
            <i class="fas fa-plus-circle me-2"></i>Thêm hóa đơn mới
        </a>
    </div>

    <div class="filter-section">
        <h6 class="filter-title"><i class="fas fa-filter me-2"></i>Bộ lọc hóa đơn</h6>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="invoiceTypeFilter" class="form-label">Loại hóa đơn:</label>
                    <select id="invoiceTypeFilter" class="form-select select-filter">
                        <option value="all">Tất cả các loại</option>
                        <option value="Sản phẩm">Sản phẩm</option>
                        <option value="Dịch vụ">Dịch vụ</option>
                        <option value="Lịch hẹn">Lịch hẹn</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="form-label">Hành động:</label>
                    <div>
                        <button id="resetFilterBtn" class="btn btn-reset">
                            <i class="fas fa-sync-alt me-2"></i>Đặt lại bộ lọc
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="invoice-card">
        <div class="table-responsive">
            <table id="invoiceTable" class="table invoice-table table-hover">
                <thead>
                    <tr>
                        <th style="width: 5%;" class="text-center">STT</th>
                        <th style="width: 15%;">Tổng tiền</th>
                        <th style="width: 15%;" class="text-center">Trạng thái</th>
                        <th style="width: 15%;" class="text-center">Ngày tạo</th>
                        <th style="width: 15%;" class="text-center">Loại hóa đơn</th>
                        <th style="width: 15%;">Người lập</th>
                        <th style="width: 20%;" class="text-center">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-type="@item.InvoiceType">
                            <td class="text-center row-number">@(p++)</td>
                            <td class="fw-bold text-end">@item.TotalAmount?.ToString("N0") đ</td>
                            <td class="text-center">
                                @if (item.Status == "Chờ xử lý")
                                {
                                    <span class="status-badge status-pending">
                                        <i class="fas fa-clock me-1"></i>@item.Status
                                    </span>
                                }
                                else if (item.Status == "Đã xử lý")
                                {
                                    <span class="status-badge status-processed">
                                        <i class="fas fa-check-circle me-1"></i>@item.Status
                                    </span>
                                }
                                else if (item.Status == "Đã hủy")
                                {
                                    <span class="status-badge status-cancelled">
                                        <i class="fas fa-times-circle me-1"></i>@item.Status
                                    </span>
                                }
                                else
                                {
                                    <span class="status-badge">@item.Status</span>
                                }
                            </td>
                            <td class="text-center">@item.CreatedAt?.ToString("dd/MM/yyyy")</td>
                            <td class="text-center">
                                @if (item.InvoiceType == "Sản phẩm")
                                {
                                    <span class="badge bg-info px-3 py-2">
                                        <i class="fas fa-box me-1"></i>@item.InvoiceType
                                    </span>
                                }
                                else if (item.InvoiceType == "Dịch vụ")
                                {
                                    <span class="badge bg-primary px-3 py-2">
                                        <i class="fas fa-concierge-bell me-1"></i>@item.InvoiceType
                                    </span>
                                }
                                else if (item.InvoiceType == "Lịch hẹn")
                                {
                                    <span class="badge bg-success px-3 py-2">
                                        <i class="fas fa-calendar-check me-1"></i>@item.InvoiceType
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary px-3 py-2">@item.InvoiceType</span>
                                }
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="avatar avatar-sm bg-primary text-white rounded-circle me-2 d-flex align-items-center justify-content-center" style="width: 32px; height: 32px;">
                                        @if (!string.IsNullOrEmpty(item.User?.FullName))
                                        {
                                            @item.User.FullName.Substring(0, 1)
                                        }
                                        else
                                        {
                                            <i class="fas fa-user"></i>
                                        }
                                    </div>
                                    <div>@item.User?.FullName</div>
                                </div>
                            </td>
                            <td class="invoice-actions text-center">
                                <a asp-action="Edit" asp-route-id="@item.InvoiceId" class="btn btn-edit">
                                    <i class="fas fa-edit me-1"></i>Sửa
                                </a>
                                <a asp-action="Details" asp-route-id="@item.InvoiceId" class="btn btn-view">
                                    <i class="fas fa-eye me-1"></i>Chi tiết
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.InvoiceId" class="btn btn-delete">
                                    <i class="fas fa-trash me-1"></i>Xóa
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div id="noResults" class="no-results d-none">
        <i class="fas fa-search"></i>
        <h5>Không tìm thấy hóa đơn</h5>
        <p class="mb-0">Không có hóa đơn nào thuộc loại bạn đã chọn. Vui lòng thử lại với bộ lọc khác.</p>
    </div>
</div>

@section Scripts {
    <!-- Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const invoiceTypeFilter = document.getElementById('invoiceTypeFilter');
            const resetFilterBtn = document.getElementById('resetFilterBtn');
            const tableRows = document.querySelectorAll('#invoiceTable tbody tr');
            const noResults = document.getElementById('noResults');
            const tableContainer = document.querySelector('.invoice-card');

            // Hàm lọc hóa đơn
            function filterInvoices(filterValue) {
                let visibleCount = 0;

                tableRows.forEach(row => {
                    const invoiceType = row.getAttribute('data-type');

                    if (filterValue === 'all' || invoiceType === filterValue) {
                        row.classList.remove('d-none');
                        visibleCount++;
                    } else {
                        row.classList.add('d-none');
                    }
                });

                // Hiển thị thông báo nếu không có kết quả
                if (visibleCount === 0) {
                    noResults.classList.remove('d-none');
                    tableContainer.classList.add('d-none');
                } else {
                    noResults.classList.add('d-none');
                    tableContainer.classList.remove('d-none');
                }

                // Cập nhật STT sau khi lọc
                updateRowNumbers();

                // Thêm animation khi lọc
                document.querySelector('#invoiceTable tbody').classList.add('filter-fade');
                setTimeout(() => {
                    document.querySelector('#invoiceTable tbody').classList.remove('filter-fade');
                }, 400);
            }

            // Hàm cập nhật số thứ tự
            function updateRowNumbers() {
                let counter = 1;
                tableRows.forEach(row => {
                    if (!row.classList.contains('d-none')) {
                        row.querySelector('.row-number').textContent = counter++;
                    }
                });
            }

            // Xử lý sự kiện thay đổi lọc
            invoiceTypeFilter.addEventListener('change', function() {
                const filterValue = this.value;
                filterInvoices(filterValue);

                // Lưu giá trị lọc vào localStorage
                localStorage.setItem('invoiceTypeFilter', filterValue);
            });

            // Xử lý nút đặt lại
            resetFilterBtn.addEventListener('click', function() {
                invoiceTypeFilter.value = 'all';
                filterInvoices('all');
                localStorage.removeItem('invoiceTypeFilter');

                // Thêm hiệu ứng khi click
                this.classList.add('animate__animated', 'animate__pulse');
                setTimeout(() => {
                    this.classList.remove('animate__animated', 'animate__pulse');
                }, 500);
            });

            // Khôi phục lựa chọn lọc từ localStorage khi tải trang
            const savedFilter = localStorage.getItem('invoiceTypeFilter');
            if (savedFilter) {
                invoiceTypeFilter.value = savedFilter;
                filterInvoices(savedFilter);
            }
        });
    </script>
}